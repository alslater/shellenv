platform=$(uname -s)

case ${platform} in
  SunOS)
    if [[ -d /opt/essiell2019 ]]; then
      pkgsrc=/opt/essiell2019
      export UPOS1PLATFORM=omnios-x64-gcc8
      # For OI
	  [ -x /usr/gcc/10/bin/gcc ] && PATH=/usr/gcc/10/bin:$PATH 
    else
      pkgsrc=/opt/scl64
      export UPOS1PLATFORM=omnios-x64-gcc4
    fi

	# Oracle settings
	export ORACLE_OWNER=oracle
	export ORACLE_BASE=${pkgsrc}/oracle/11
	export ORACLE_HOME=$ORACLE_BASE
	export PATH=$PATH:$ORACLE_HOME
	export LD_LIBRARY_PATH_64=$ORACLE_HOME:$LD_LIBRARY_PATH_64

	# OmniOrb
	OMNIVER=4_1
	export OMNIROOT=${pkgsrc}
	export OMNIORB_CONFIG=${HOME}/.omniorb/omniORB.cfg
	export OMNINAMES_LOGDIR=/var/tmp

	# Upos
	export UPOS1DBUSER=aslate
	export UPOS1DBALIAS=o9
	export UPOS1=~/upos1.64
	export UPOS1DEBUG=1
	export UPOS1RELEASE=${HOME}/dev/ultrapos/upos1/release
	export UPOSHOME=${HOME}/dev/ultrapos
	export UPOS1ROOT=${HOME}/dev/ultrapos/upos1
	export UPOS1DBPASSWORD=servo
	#export UPOS1PLATFORM=omnios-x64-gcc4
	export M4T=${HOME}/dev/ultrapos/middleware
	export MW=${HOME}/dev/ultrapos/middleware

	export PATH=$PATH:$UPOS1/bin
	export LD_LIBRARY_PATH_64=$LD_LIBRARY_PATH:$UPOS1/lib
    ;;

  Linux)
	# OmniOrb
	OMNIVER=4_1
	export OMNIROOT=/
	export OMNIORB_CONFIG=${HOME}/.omniorb/omniORB.cfg
	export OMNINAMES_LOGDIR=/var/tmp

	# Upos
	export UPOS1DBUSER=aslate
	export UPOS1DBALIAS=o9
	export UPOS1=~/upos1
	export UPOS1DEBUG=0
	export UPOS1RELEASE=${HOME}/dev/ultrapos/upos1/release
	export UPOSHOME=${HOME}/dev/ultrapos
	export UPOS1ROOT=${HOME}/dev/ultrapos/upos1
	export UPOS1DBPASSWORD=servo
	export UPOS1PLATFORM=linux-x64-gcc9
	export M4T=${HOME}/dev/ultrapos/middleware
	export MW=${HOME}/dev/ultrapos/middleware

	export PATH=$PATH:$UPOS1/bin
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$UPOS1/lib
  	;;
esac

function switch_env
{
	bookmark=${1}

	if [ -z "${bookmark}" ]; then
		echo "Usage: switch_env bookmark"
		return 1
	fi


	UPOSDEVHOME=${UPOSHOME}
	UPOSTGT=${UPOSHOME}_${bookmark}

	echo "Checking ultrapos home symlink ${UPOSDEVHOME}..."
	if [ ! -L ${UPOSDEVHOME} ]; then
		echo "Error: ${UPOSDEVHOME} is not a symlink"
		return 1
	fi

	echo "Checking ultrapos target ${UPOSTGT}"
	if [ ! -d ${UPOSTGT} ]; then
		echo "Error: ${UPOSTGT} does not exist or is not a folder"
		return 1
	fi

	echo "Stopping any running servers..."
	cd ${UPOSDEVHOME}/middleware/servers
	[ -x ./ols ] && ./ols -shutdown 2>&1


	cd ${UPOSHOME}/..

	echo "Removing ultrapos home symlink ${UPOSDEVHOME}"
	rm ${UPOSDEVHOME}

	echo "Relinking ultrapos home symlink ${UPOSTGT}"
	ln -s ${UPOSTGT} ${UPOSDEVHOME}

	cd ${UPOSDEVHOME}
	hg bookmarks | grep "\*"

	if [ -x ${UPOSHOME}/middleware/cgw2/${UPOS1PLATFORM}/libcgw.so ]; then
		echo "CGW module present, restarting apache"
		~/apache/bin/apachectl restart
	else
		echo "CGW module not present, stopping apache"
		~/apache/bin/apachectl stop
	fi
}

function list_envs
{
	envs="$(ls -d ${UPOSHOME}/../ultrapos_m* | grep -v maint) $(ls -d ${UPOSHOME}/../ultrapos_b* 2>/dev/null)"

	for i in ${envs}; do
    	if test -d ${i}; then
		    bn=$(basename ${i})
    		tag=${bn/ultrapos_/}
			printf "%s %s\n" ${bn} ${tag}
    	fi
	done
}

function current_env
{
	ln=$(readlink ${UPOSHOME})
	bn=$(basename ${ln})
    tag=${bn/ultrapos_/}
	printf "%s %s\n" ${bn} ${tag}
}
